generator client {
    provider = "prisma-client-js"
    output   = "./client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    username      String    @unique
    password      String
    email         String
    emailVerified Boolean
    image         String?
    createdAt     DateTime
    updatedAt     DateTime
    sessions      Session[]
    accounts      Account[]

    book Book[]

    @@unique([email])
    @@map("users")
}

model Account {
    id                    String    @id @default(cuid())
    accountId             String
    providerId            String
    userId                String
    user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken           String?
    refreshToken          String?
    idToken               String?
    accessTokenExpiresAt  DateTime?
    refreshTokenExpiresAt DateTime?
    scope                 String?
    password              String?
    createdAt             DateTime
    updatedAt             DateTime

    @@map("account")
}

model Verification {
    id         String    @id @default(cuid())
    identifier String
    value      String
    expiresAt  DateTime
    createdAt  DateTime?
    updatedAt  DateTime?

    @@map("verification")
}

model Session {
    id        String   @id @default(cuid())
    expiresAt DateTime
    token     String
    createdAt DateTime
    updatedAt DateTime
    ipAddress String?
    userAgent String?
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([token])
    @@map("session")
}

model Book {
    id          String   @id @default(cuid())
    title       String
    author      String
    type        BookType
    isRead      Boolean  @default(false)
    createdAt   DateTime @default(now())
    totalPage   Int?
    currentPage Int?

    User   User?   @relation(fields: [userId], references: [id])
    userId String?

    @@map("books")
}

enum BookType {
    NOVEL
    MANGA
    LIGHT_NOVEL
    COMIC
}
